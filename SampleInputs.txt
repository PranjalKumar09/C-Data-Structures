Unique Elements
// Array with size 10
int array1[] = {5, 12, 3, 18, 9, 7, 14, 2, 6, 20};

// Array with size 20
int array2[] = {8, 16, 3, 10, 25, 7, 14, 22, 19, 33, 11, 45, 2, 6, 31, 17, 9, 4, 27, 13};

// Array with size 30
int array3[] = {22, 5, 14, 29, 11, 3, 18, 27, 7, 42, 8, 35, 16, 10, 25, 33, 19, 6, 48, 21, 2, 39, 45, 12, 9, 4, 31, 26, 17, 37};

// Array with size 40
int array4[] = {16, 3, 28, 5, 14, 22, 11, 36, 9, 7, 18, 25, 33, 45, 2, 6, 31, 17, 21, 8, 29, 19, 10, 48, 4, 27, 13, 35, 42, 26, 23, 37, 12, 41, 30, 15, 20, 39, 24, 32, 38};

Non-Unique Array 1 (size 10): {7, 11, 14, 17, 8, 15, 9, 14, 2, 13}
Non-Unique Array 2 (size 20): {18, 29, 15, 23, 17, 6, 25, 4, 24, 28, 16, 8, 7, 9, 19, 7, 6, 27, 10, 22}
Non-Unique Array 3 (size 30): {28, 10, 27, 11, 8, 29, 6, 20, 18, 37, 26, 34, 40, 7, 31, 38, 23, 10, 4, 5, 35, 36, 22, 37, 14, 29, 5, 36, 30, 25}
Non-Unique Array 4 (size 40): {3, 47, 31, 33, 44, 27, 36, 14, 5, 18, 30, 33, 46, 14, 14, 42, 12, 22, 48, 37, 6, 27, 42, 33, 22, 11, 30, 5, 22, 11, 45, 8, 35, 12, 47, 41, 35, 45, 31, 12, 2, 50, 7}

Raw code 
#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

int main(){
    cout << endl;
    
    
    cout << endl;
    return 0;
}


Sorted Unique Arrays

Array of size 10:

int arr1[] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19};

Array of size 20:

int arr2[] = {2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40};

Array of size 30:

int arr3[] = {5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150};

Array of size 40:

int arr4[] = {3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51, 55, 59, 63, 67, 71, 75, 79, 83, 87, 91, 95, 99, 103, 107, 111, 115, 119, 123, 127, 131, 135, 139, 143, 147, 151, 155, 159};

Array of size 50:

int arr5[] = {1, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76, 81, 86, 91, 96, 101, 106, 111, 116, 121, 126, 131, 136, 141, 146, 151, 156, 161, 166, 171, 176, 181, 186, 191, 196, 201, 206, 211, 216, 221, 226, 231, 236};


Repeated Sorted

int arr[] = {1, 2, 4, 4, 4, 5, 6, 7, 8, 9};



int arr[] = {-10, -5, 0, 2, 2, 2, 5, 8, 10, 15};


int arr[] = {3, 3, 3, 3, 3, 3, 3, 3, 3, 3};
i

int arr[] = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100};



Arrays with negative + postive No


int arr[] = {-10, -8, -5, -3, 0, 2, 4, 6, 8, 10, 12, 15, 18, 20, 22};
int arr[] = {-15, -12, -10, -8, -5, -3, 0, 2, 4, 6, 8, 10, 12, 15, 18, 20, 22, 25, 28, 30};
int arr[] = {-20, -18, -15, -12, -10, -8, -5, -3, 0, 2, 4, 6, 8, 10, 12, 15, 18, 20, 22, 25, 28, 30, 33, 35, 38};
int arr[] = {-25, -22, -20, -18, -15, -12, -10, -8, -5, -3, 0, 2, 4, 6, 8, 10, 12, 15, 18, 20, 22, 25, 28, 30, 33, 35, 38, 40, 42, 45};
int arr[] = {-30, -28, -25, -22, -20, -18, -15, -12, -10, -8, -5, -3, 0, 2, 4, 6, 8, 10, 12, 15, 18, 20, 22, 25, 28, 30, 33, 35, 38, 40, 42, 45, 48, 50, 52, 55, 58, 60, 62, 65};




int size = sizeof(arr)/sizeof(arr[0]);


